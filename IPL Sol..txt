Q1- Create a table named ‘matches’ with appropriate data types for columns?

CREATE TABLE matches(
id INT ,
city VARCHAR,
date date,
player_of_match varchar,
venue varchar,
neutral_venue int,
team1 varchar,
team2 varchar,
toss_winner varchar,
toss_decision varchar, 
winner varchar,
result varchar,
result_margin int ,
eliminator varchar, 
method varchar ,
umpire1 varchar ,
umpire2 varchar);


Q2-Create a table named ‘deliveries’ with appropriate data types for columns

CREATE TABLE deliveries(
id INT,
inning int,
over int,
ball int,
batsman varchar,
non_strike varchar,
bowler varchar,
batsman_runs int,
extra_runs int,
total_runs int,
is_wicket int,
dismissal_kind varchar,
player_dismissed varchar,
fielder varchar,
extras_type varchar,
batting_team varchar,
bowling_team varchar);


Q3-Import data from csv file ’IPL_matches.csv’ attached in resources to the table ‘matches’ which was created in Q1

COPY matches FROM 'C:\Program Files\PostgreSQL\15\data\data_copy\IPL_matches.csv' CSV HEADER;


Q4-Import data from csv file ’IPL_Ball.csv’ attached in resources to the table ‘deliveries’ which was created in Q2

COPY deliveries FROM 'C:\Program Files\PostgreSQL\15\data\data_copy\IPL_Ball.csv' CSV HEADER;


Q5-Select the top 20 rows of the deliveries table after ordering them by id, inning, over, ball in ascending order.

SELECT * FROM deliveries
ORDER BY id, inning, over, ball ASC
LIMIT 20;


Q6-Select the top 20 rows of the matches table.

SELECT * FROM matches
LIMIT 20;


Q7-Fetch data of all the matches played on 2nd May 2013 from the matches table..

SELECT * FROM matches
WHERE date='2013-05-02';


Q8-Fetch data of all the matches where the result mode is ‘runs’ and margin of victory is more than 100 runs.

SELECT * FROM matches
WHERE result='runs' and victory>100;


Q9-Fetch data of all the matches where the final scores of both teams tied and order it in descending order of the date.

SELECT * FROM matches
WHERE result = 'tie'
ORDER BY date DESC;


Q10-Get the count of cities that have hosted an IPL match.

SELECT city, COUNT(city)AS total_host FROM matches
GROUP BY city;


Q11-Create table deliveries_v02 with all the columns of the table ‘deliveries’ and an additional column ball_result containing values boundary, dot or other depending on the total_run (boundary for >= 4, dot for 0 and other for any other number)

CREATE TABLE deliveries_v02 AS
SELECT * FROM deliveries;
ALTER TABLE deliveries
ADD ball_result varchar;
UPDATE deliveries
SET ball_result= CASE
WHEN total_runs>=4 THEN 'boundary'
WHEN total_runs=0 THEN 'dot'
ELSE 'other'
END;


Q12-Write a query to fetch the total number of boundaries and dot balls from the deliveries_v02 table.

SELECT ball_result, COUNT(ball_result)AS total FROM deliveries_v02
WHERE ball_result='boundary' or ball_result='dot'
GROUP BY ball_result;


Q13-Write a query to fetch the total number of boundaries scored by each team from the deliveries_v02 table and order it in descending order of the number of boundaries scored.

SELECT batting_team, COUNT(ball_result)AS boundaries FROM deliveries_v02
WHERE ball_result='boundary'
GROUP BY batting_team
ORDER BY boundaries DESC;


Q14-Write a query to fetch the total number of dot balls bowled by each team and order it in descending order of the total number of dot balls bowled.

SELECT bowling_team, COUNT(ball_result)AS dot FROM deliveries_v02
WHERE ball_result='dot'
GROUP BY bowling_team
ORDER BY dot DESC;


Q15-Write a query to fetch the total number of dismissals by dismissal kinds where dismissal kind is not NA

SELECT COUNT(dismissal_kind)AS total_dismissal FROM deliveries_v02
WHERE NOT dismissal_kind='NA';


Q16-Write a query to get the top 5 bowlers who conceded maximum extra runs from the deliveries table

SELECT bowler, extra_runs FROM deliveries
ORDER BY extra_runs DESC
LIMIT 5;


Q17-Write a query to create a table named deliveries_v03 with all the columns of deliveries_v02 table and two additional column (named venue and match_date) of venue and date from table matches

CREATE TABLE delivers_v03 AS
SELECT deliveries_v02.*,
matches.venue,
matches.date
FROM deliveries_v02
LEFT JOIN matches
ON deliveries_v02.id = matches.id;


Q18-Write a query to fetch the total runs scored for each venue and order it in the descending order of total runs scored.

SELECT venue, COUNT(total_runs)AS totalrun FROM delivers_v03
GROUP BY venue
ORDER BY totalrun DESC;


Q19-Write a query to fetch the year-wise total runs scored at Eden Gardens and order it in the descending order of total runs scored.

SELECT EXTRACT(year from date)AS matchyear, COUNT(total_runs)AS totalruns FROM delivers_v03
WHERE venue='Eden Gardens'
GROUP BY matchyear
ORDER BY totalruns DESC;